import { Validate3rdValue, Validate3rdOptions } from '../validate3rd.js';
import { Verify3rdFn } from '../types.js';
export type { Chat, ChatType, InitData, User } from '@telegram-apps/types';
export { TypedError, isErrorOfType } from '@telegram-apps/toolkit';
export { ERR_PARSE, ERR_UNEXPECTED_VALUE } from '@telegram-apps/transformers';
export { initDataToSearchParams } from '../initDataToSearchParams.js';
export { parse } from '../parse.js';
export type { ValidateOptions, ValidateValue } from '../validate.js';
export type { SignData, Text, CreateHmacFn } from '../types.js';
export { ERR_HASH_INVALID, ERR_AUTH_DATE_INVALID, ERR_EXPIRED, ERR_SIGN_INVALID, } from '../errors.js';
export type { Validate3rdValue, Validate3rdOptions, Verify3rdFn };
/**
 * Validates passed init data using a publicly known Ee25519 key.
 * @param value - value to check.
 * @param botId - bot identifier
 * @param options - additional validation options.
 * @throws {Error} ERR_SIGN_INVALID
 * @throws {Error} ERR_AUTH_DATE_INVALID
 * @throws {Error} ERR_SIGNATURE_MISSING
 * @throws {Error} ERR_EXPIRED
 */
export declare function validate3rd(value: Validate3rdValue, botId: number, options?: Validate3rdOptions): Promise<void>;
/**
 * @param value - value to check.
 * @param botId - bot identifier
 * @param options - additional validation options.
 * @returns True is specified init data is signed by Telegram.
 */
export declare function isValid3rd(value: Validate3rdValue, botId: number, options?: Validate3rdOptions): Promise<boolean>;
